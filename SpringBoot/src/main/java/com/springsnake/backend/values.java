package com.springsnake.backend;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import lombok.Data;

/**
 * MongoDB Entity class for Spring Snake Key-Value Store
 * 
 * This class represents the database entity for storing key-value pairs in MongoDB.
 * It includes automatic timestamp generation and serves as the primary data model
 * for the Spring Snake application.
 * 
 * The entity is mapped to a MongoDB collection and includes:
 * - Unique MongoDB document ID
 * - Key for value identification
 * - Value data (can be any object type)
 * - Automatic timestamp generation for tracking changes
 * 
 * @author M04ph3u2
 * @version 2.0
 * @since 1.0
 */
@Data
@Document
public class values {
    
    /**
     * MongoDB document identifier
     * 
     * This field is automatically generated by MongoDB and serves as the
     * unique identifier for each document in the collection.
     */
    @Id
    private String id;

    /**
     * User-defined key for value identification
     * 
     * This field stores the key that users provide to identify their values.
     * It should be unique within the application context.
     */
    private String key;
    
    /**
     * The stored value data
     * 
     * This field can contain any object type and will be serialized
     * appropriately for MongoDB storage.
     */
    private Object value;
    
    /**
     * Timestamp of the last change
     * 
     * This field automatically stores the ISO formatted timestamp
     * of when the value was created or last modified.
     */
    private String lastchange;

    /**
     * Constructor for creating a new value entity
     * 
     * Creates a new values entity with the specified key and value,
     * automatically setting the lastchange timestamp to the current time.
     * 
     * @param key The unique identifier for this value
     * @param value The data to be stored
     */
    public values(String key, Object value) {
        this.key = key;
        this.value = value;
        DateTimeFormatter formatter = DateTimeFormatter.ISO_ZONED_DATE_TIME;
        this.lastchange = ZonedDateTime.now().format(formatter);
    }
}